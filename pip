//PROBLEM SET 1
#include <superkarel.h>
#include <stdbool.h>

void turn_right(){
    turn_left();
    turn_left();
    turn_left();
}

void turn_around(){
    turn_left();
    turn_left();
}

void turn_back(){
    turn_left();
    turn_left();
}

void find_center1(){
    step();
    step();
    if(front_is_clear()){
        find_center1();
    }
    turn_back();
    step();
    turn_back();
}

// 1 void pick_all()
while (beepers_present()) {
pick_beeper();
}

// 2 void find_south_east()
while (not_facing_south()) {
turn_left();
}

while (front_is_clear()) {
step();
}

while (not_facing_east()) {
turn_left();
}

while (front_is_clear()) {
step();
}

// 3 bool facing_vertical()

bool facing_vertical() {
    return facing_north() || facing_south();
}

void climb_stairs() {
    while (true) {
        while (front_is_clear()) {
            while (beepers_present()) {
                pick_beeper();
            }
            step();
        }
        turn_left();

        if (right_is_clear()) {
            break;
        }

        while (right_is_blocked()) {
            while (beepers_present()) {
                pick_beeper();
            }
            step();
        }

        turn_right();
    }

    turn_around();

    while(left_is_clear()) {
        step();
    }

    while(beepers_in_bag()) {
        put_beeper();
    }
}

void olympics() {
    while (true) {
        while (front_is_clear()) {
            step();
            if (beepers_present()) {
                pick_beeper(); // чи має піднімати біпер
                return;
            }
        }

        turn_left();

        while (right_is_blocked()) {
            step();
        }

        turn_right();

        do {
            step();
        } while (right_is_blocked());

        turn_right();

        while (front_is_clear()) {
            step();
        }

        turn_left();
    }
}


void find_center() {
    find_center1();
    turn_left();
    find_center1();
}

bool no_beepers() {
    return no_beepers_present() && no_beepers_in_bag();
}

void mark_empty_line() {
    while(front_is_clear()) {
        step();
    }

    turn_around();


    while(true) {
        if (no_beepers_present()) {
            put_beeper();
        }

        if (front_is_blocked()) {
            break;
        }

        step();
    }
}
